openapi: 3.0.3
info:
  title: SmartHome
  version: 1.0.11
tags:
  - name: user
    description: Управление системами умного дома
  - name: telemetry
    description: Обработка данных датчиков
  - name: heating
    description: Запросы к системе отопления
  - name: light
    description: Запросы к системе освещения
  - name: gates
    description: Запросы к воротам
  - name: survelliance
    description: Запросы к системе наблюдения
paths:
  /devices:
    get:
      tags:
        - user
      summary: Возвращает список устройств пользователя
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      tags:
        - user
      summary: Добавляет новое устройство пользователя
      requestBody:
        description: Создать новое устройство
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/xml:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
  /devices/{id}:
    get:
      tags:
        - user
      summary: Получить устройство по Id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid device Id supplied
        '404':
          description: Device not found
    patch:
      tags:
        - user
      summary: Обновить настройки устройства
      parameters:
        - name: id
          in: path
          description: id устройства
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/xml:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid device Id supplied
        '404':
          description: Device not found
    delete:
      tags:
        - user
      summary: Удалить устройство
      parameters:
        - name: id
          in: path
          description: Id удаляемого устройства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid device Id supplied
        '404':
          description: Device not found
  /telemetry:
    get:
      tags:
        - telemetry
      summary: Возвращает данные по всем датчикам
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'
  /telemetry/{id}:
    get:
      tags:
        - telemetry
      summary: Получить данные датчика по Id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telemetry'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Telemetry'
        '400':
          description: Invalid module Id supplied
        '404':
          description: Module not found
  /telemetry/findByDate:
    get:
      tags:
        - telemetry
      summary: Возвращает данные датчиков за конкретную дату
      parameters:
        - name: date
          in: query
          description: Дата поиска
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'
        '400':
          description: Invalid date value
  /heating:
    get:
      tags:
        - heating
      summary: Возвращает статус системы отпления
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string       
            application/xml:
              schema:
                type: string
    post:
      tags:
        - heating
      summary: Отправляет запрос на включение/отключение системы отопления
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
    put:
      tags:
        - heating
      summary: Устанавливает значение температуры
      requestBody:
        description: Новое значение температуры
        content:
          application/json:
            schema:
              type: integer
          application/xml:
            schema:
              type: integer
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid value supplied
  /light:
    get:
      tags:
        - light
      summary: Возвращает статус системы освещения
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string       
            application/xml:
              schema:
                type: string
    post:
      tags:
        - light
      summary: Отправляет запрос на включение/отключение системы освещения
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
    put:
      tags:
        - light
      summary: Устанавливает параметры системы освещения
      requestBody:
        description: Новое значение яркости
        content:
          application/json:
            schema:
              type: integer
          application/xml:
            schema:
              type: integer
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid value supplied
  /gates:
    get:
      tags:
        - gates
      summary: Возвращает статус ворот (открыты/закрыты)
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string       
            application/xml:
              schema:
                type: string
    post:
      tags:
        - gates
      summary: Отправляет запрос на открытие/закрытие ворот
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /survelliance:
    get:
      tags:
        - survelliance
      summary: Возвращает статус системы видеонаблюдения
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string       
            application/xml:
              schema:
                type: string
    post:
      tags:
        - survelliance
      summary: Отправляет запрос на включение/отключение системы видеонаблюдения
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /survelliance/{moduleId}:
    get:
      tags:
        - survelliance
      summary: Возвращает статус камеры по Id
      parameters:
        - name: moduleId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string       
            application/xml:
              schema:
                type: string
    post:
      tags:
        - survelliance
      summary: Отправляет запрос на включение/отключение камеры по Id
      parameters:
        - name: moduleId
          in: path
          required: true
          schema:
            type: integer
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
components:
  schemas:
    Device:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        deviceTypeId:
          type: integer
          format: int64
          example: 20
        houseId:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: MyDevice
        serialNumber:
          type: string
          example: MJ654X342-OG54
      xml:
        name: device
    Telemetry:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        moduleId:
          type: integer
          format: int64
          example: 20
        date:
          type: string
          format: date-time
          example: 10-22-2024
        status:
          type: string
          example: On
        message:
          type: string
          example: Switched on
      xml:
        name: telemetry